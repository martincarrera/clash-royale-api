//! angular-formly-templates-bootstrap version 6.3.2 built with ♥ by Astrism <astrisms@gmail.com>, Kent C. Dodds <kent@doddsfamily.us> (ó ì_í)=óò=(ì_í ò)
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("angular"),require("api-check"),require("angular-formly")):"function"==typeof define&&define.amd?define(["angular","api-check","angular-formly"],e):"object"==typeof exports?exports.ngFormlyTemplatesBootstrap=e(require("angular"),require("api-check"),require("angular-formly")):t.ngFormlyTemplatesBootstrap=e(t.angular,t.apiCheck,t.ngFormly)}(this,function(t,e,o){return function(t){function e(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var o={};return e.m=t,e.c=o,e.p="",e(0)}([function(t,e,o){"use strict";t.exports=o(2)},function(t,e,o){"use strict";var n=o(20);n.version||(n=window.angular),t.exports=n},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n="formlyBootstrap",r=o(1),i=r.module(n,[o(22)]);i.constant("formlyBootstrapApiCheck",o(21)({output:{prefix:"angular-formly-bootstrap"}})),i.constant("formlyBootstrapVersion","6.3.2"),o(13)(i),o(7)(i),o(5)(i),e["default"]=n,t.exports=e["default"]},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t,e){var n=o(14),r=e.shape({"class":e.string.optional,text:e.string.optional,onClick:e.func.optional}).strict.optional,i=e.shape({templateOptions:e.shape({addonLeft:r,addonRight:r})});t.templateManipulators.preWrapper.push(function(t,o){return o.templateOptions.addonLeft||o.templateOptions.addonRight?(e.warn([i],[o]),n.replace("<formly-transclude></formly-transclude>",t)):t})}t.run(e),e.$inject=["formlyConfig","formlyBootstrapApiCheck"]},t.exports=e["default"]},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t){t.templateManipulators.preWrapper.push(function(t,e,o){if(angular.isDefined(e.templateOptions.description)){var n=document.createElement("div");n.appendChild(angular.element(t)[0]),n.appendChild(angular.element('<p id="'+o.id+'_description"class="help-block"ng-if="to.description">{{to.description}}</p>')[0]);var r=angular.element(n.querySelectorAll("[ng-model]"));return r&&r.attr("aria-describedby",o.id+"_description"),n.innerHTML}return t})}t.run(e),e.$inject=["formlyConfig"]},t.exports=e["default"]},function(t,e,o){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var r=o(3),i=n(r),a=o(4),l=n(a);e["default"]=function(t){i["default"](t),l["default"](t)},t.exports=e["default"]},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t){t.setType({name:"checkbox",template:o(15),wrapper:["bootstrapHasError"],apiCheck:function(t){return{templateOptions:{label:t.string}}}})}t.config(e),e.$inject=["formlyConfigProvider"]},t.exports=e["default"]},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){o(6)(t),o(9)(t),o(8)(t),o(10)(t),o(11)(t),o(12)(t)},t.exports=e["default"]},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t){t.setType({name:"input",template:'<input class="form-control" ng-model="model[options.key]">',wrapper:["bootstrapLabel","bootstrapHasError"]})}t.config(e),e.$inject=["formlyConfigProvider"]},t.exports=e["default"]},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t){t.setType({name:"multiCheckbox",template:o(16),wrapper:["bootstrapLabel","bootstrapHasError"],apiCheck:function(t){return{templateOptions:{options:t.arrayOf(t.object),labelProp:t.string.optional,valueProp:t.string.optional}}},defaultOptions:{noFormControl:!1,ngModelAttrs:{required:{attribute:"",bound:""}}},controller:["$scope",function(t){function e(e){var o;t.to.required&&(o=angular.isArray(t.model[r.key])&&t.model[r.key].length>0&&e,t.fc.$setValidity("required",o))}function o(){t.model[r.key]=[],angular.forEach(t.multiCheckbox.checked,function(e,o){e&&t.model[r.key].push(n.options[o][n.valueProp||"value"])}),t.fc.$setTouched(),e(!0),t.to.onChange&&t.to.onChange()}var n=t.to,r=t.options;if(t.multiCheckbox={checked:[],change:o},t.$watch("model",function(e){var o,i;Object.keys(e).length&&(o=e[r.key],t.$watch("to.options",function(e){if(e&&Array.isArray(e)&&Array.isArray(o)){i=n.valueProp||"value";for(var r=0;r<e.length;r++)t.multiCheckbox.checked[r]=-1!==o.indexOf(e[r][i])}}))},!0),r.expressionProperties&&r.expressionProperties["templateOptions.required"]&&t.$watch(function(){return t.to.required},function(t){e(t)}),t.to.required)var i=t.$watch("fc",function(t){t&&(e(!0),i())})}]})}t.config(e),e.$inject=["formlyConfigProvider"]},t.exports=e["default"]},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t){t.setType({name:"radio",template:o(17),wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:{noFormControl:!1},apiCheck:function(t){return{templateOptions:{options:t.arrayOf(t.object),labelProp:t.string.optional,valueProp:t.string.optional}}}})}t.config(e),e.$inject=["formlyConfigProvider"]},t.exports=e["default"]},function(t,e){"use strict";function o(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t){t.setType({name:"select",template:n,wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:function(t){var e=t.templateOptions.ngOptions||"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options";return{ngModelAttrs:o({},e,{value:t.templateOptions.optionsAttr||"ng-options"})}},apiCheck:function(t){return{templateOptions:{options:t.arrayOf(t.object),optionsAttr:t.string.optional,labelProp:t.string.optional,valueProp:t.string.optional,groupProp:t.string.optional}}}})}t.config(e);var n='<select class="form-control" ng-model="model[options.key]"></select>';e.$inject=["formlyConfigProvider"]},t.exports=e["default"]},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t){t.setType({name:"textarea",template:'<textarea class="form-control" ng-model="model[options.key]"></textarea>',wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:{ngModelAttrs:{rows:{attribute:"rows"},cols:{attribute:"cols"}}},apiCheck:function(t){return{templateOptions:{rows:t.number.optional,cols:t.number.optional}}}})}t.config(e),e.$inject=["formlyConfigProvider"]},t.exports=e["default"]},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t){function e(t){t.setWrapper([{name:"bootstrapLabel",template:o(19),apiCheck:function(t){return{templateOptions:{label:t.string.optional,required:t.bool.optional,labelSrOnly:t.bool.optional}}}},{name:"bootstrapHasError",template:o(18)}])}t.config(e),e.$inject=["formlyConfigProvider"]},t.exports=e["default"]},function(t,e){t.exports='<div ng-class="{\'input-group\': to.addonLeft || to.addonRight}">\n    <div class="input-group-addon"\n         ng-if="to.addonLeft"\n         ng-style="{cursor: to.addonLeft.onClick ? \'pointer\' : \'inherit\'}"\n         ng-click="to.addonLeft.onClick(options, this, $event)">\n        <i class="{{to.addonLeft.class}}" ng-if="to.addonLeft.class"></i>\n        <span ng-if="to.addonLeft.text">{{to.addonLeft.text}}</span>\n    </div>\n    <formly-transclude></formly-transclude>\n    <div class="input-group-addon"\n         ng-if="to.addonRight"\n         ng-style="{cursor: to.addonRight.onClick ? \'pointer\' : \'inherit\'}"\n         ng-click="to.addonRight.onClick(options, this, $event)">\n        <i class="{{to.addonRight.class}}" ng-if="to.addonRight.class"></i>\n        <span ng-if="to.addonRight.text">{{to.addonRight.text}}</span>\n    </div>\n</div>\n'},function(t,e){t.exports='<div class="checkbox">\n	<label>\n		<input type="checkbox"\n           class="formly-field-checkbox"\n		       ng-model="model[options.key]">\n		{{to.label}}\n		{{to.required ? \'*\' : \'\'}}\n	</label>\n</div>\n'},function(t,e){t.exports='<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="checkbox">\n    <label>\n      <input type="checkbox"\n             id="{{id + \'_\'+ $index}}"\n             ng-model="multiCheckbox.checked[$index]"\n             ng-change="multiCheckbox.change()">\n      {{option[to.labelProp || \'name\']}}\n    </label>\n  </div>\n</div>\n'},function(t,e){t.exports='<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="radio">\n    <label>\n      <input type="radio"\n             id="{{id + \'_\'+ $index}}"\n             tabindex="0"\n             ng-value="option[to.valueProp || \'value\']"\n             ng-model="model[options.key]">\n      {{option[to.labelProp || \'name\']}}\n    </label>\n  </div>\n</div>\n'},function(t,e){t.exports='<div class="form-group" ng-class="{\'has-error\': showError}">\n  <formly-transclude></formly-transclude>\n</div>\n'},function(t,e){t.exports="<div>\n  <label for=\"{{id}}\" class=\"control-label {{to.labelSrOnly ? 'sr-only' : ''}}\" ng-if=\"to.label\">\n    {{to.label}}\n    {{to.required ? '*' : ''}}\n  </label>\n  <formly-transclude></formly-transclude>\n</div>\n"},function(e,o){e.exports=t},function(t,o){t.exports=e},function(t,e){t.exports=o}])});
//# sourceMappingURL=angular-formly-templates-bootstrap.min.js.map