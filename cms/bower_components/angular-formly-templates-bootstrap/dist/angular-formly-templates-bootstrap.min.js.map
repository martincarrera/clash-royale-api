{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dist/angular-formly-templates-bootstrap.min.js","webpack:///webpack/bootstrap 460866ee33f91f7b6705","webpack:///./index.js","webpack:///./angular-fix/index.js","webpack:///./index.common.js","webpack:///./run/addons.js","webpack:///./run/description.js","webpack:///./run/index.js","webpack:///./types/checkbox.js","webpack:///./types/index.js","webpack:///./types/input.js","webpack:///./types/multiCheckbox.js","webpack:///./types/radio.js","webpack:///./types/select.js","webpack:///./types/textarea.js","webpack:///./wrappers/index.js","webpack:///./run/addons.html","webpack:///./types/checkbox.html","webpack:///./types/multiCheckbox.html","webpack:///./types/radio.html","webpack:///./wrappers/has-error.html","webpack:///./wrappers/label.html","webpack:///external \"angular\"","webpack:///external {\"root\":\"apiCheck\",\"amd\":\"api-check\",\"commonjs2\":\"api-check\",\"commonjs\":\"api-check\"}","webpack:///external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_20__","__WEBPACK_EXTERNAL_MODULE_21__","__WEBPACK_EXTERNAL_MODULE_22__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","angular","version","window","Object","defineProperty","value","ngModuleName","ngModule","constant","output","prefix","addAddonsManipulator","formlyConfig","formlyBootstrapApiCheck","addonTemplate","addonChecker","shape","class","string","optional","text","onClick","func","strict","api","templateOptions","addonLeft","addonRight","templateManipulators","preWrapper","push","template","options","warn","replace","run","$inject","addDescriptionManipulator","scope","isDefined","description","el","document","createElement","appendChild","element","modelEls","querySelectorAll","attr","innerHTML","_interopRequireDefault","obj","__esModule","default","_addons","_addons2","_description","_description2","addCheckboxType","formlyConfigProvider","setType","name","wrapper","apiCheck","check","label","config","addInputType","arrayOf","object","labelProp","valueProp","defaultOptions","noFormControl","ngModelAttrs","required","attribute","bound","controller","$scope","checkValidity","expressionValue","valid","to","isArray","model","opts","key","length","fc","$setValidity","setModel","forEach","multiCheckbox","checked","checkbox","index","$setTouched","onChange","change","$watch","newModelValue","modelValue","keys","newOptionsValues","Array","indexOf","expressionProperties","newValue","unwatchFormControl","addRadioType","_defineProperty","enumerable","configurable","writable","addSelectType","ngOptions","optionsAttr","groupProp","addTextareaType","rows","cols","number","addWrappers","setWrapper","bool","labelSrOnly"],"mappings":"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","file":"dist/angular-formly-templates-bootstrap.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"api-check\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesBootstrap\"] = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTemplatesBootstrap\"] = factory(root[\"angular\"], root[\"apiCheck\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","//! angular-formly-templates-bootstrap version 6.3.2 built with ♥ by Astrism <astrisms@gmail.com>, Kent C. Dodds <kent@doddsfamily.us> (ó ì_í)=óò=(ì_í ò)\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"api-check\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesBootstrap\"] = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTemplatesBootstrap\"] = factory(root[\"angular\"], root[\"apiCheck\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(2);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// some versions of angular don't export the angular module properly,\n\t// so we get it from window in this case.\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(20);\n\tif (!angular.version) {\n\t  angular = window.angular;\n\t}\n\tmodule.exports = angular;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar ngModuleName = 'formlyBootstrap';\n\tvar angular = __webpack_require__(1);\n\tvar ngModule = angular.module(ngModuleName, [__webpack_require__(22)]);\n\tngModule.constant('formlyBootstrapApiCheck', __webpack_require__(21)({\n\t  output: {\n\t    prefix: 'angular-formly-bootstrap'\n\t  }\n\t}));\n\tngModule.constant('formlyBootstrapVersion', (\"6.3.2\"));\n\t\n\t__webpack_require__(13)(ngModule);\n\t__webpack_require__(7)(ngModule);\n\t__webpack_require__(5)(ngModule);\n\t\n\texports['default'] = ngModuleName;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.run(addAddonsManipulator);\n\t\n\t  function addAddonsManipulator(formlyConfig, formlyBootstrapApiCheck) {\n\t    var addonTemplate = __webpack_require__(14);\n\t    var addonChecker = formlyBootstrapApiCheck.shape({\n\t      'class': formlyBootstrapApiCheck.string.optional,\n\t      text: formlyBootstrapApiCheck.string.optional,\n\t      onClick: formlyBootstrapApiCheck.func.optional\n\t    }).strict.optional;\n\t    var api = formlyBootstrapApiCheck.shape({\n\t      templateOptions: formlyBootstrapApiCheck.shape({\n\t        addonLeft: addonChecker,\n\t        addonRight: addonChecker\n\t      })\n\t    });\n\t    formlyConfig.templateManipulators.preWrapper.push(function (template, options) {\n\t      if (!options.templateOptions.addonLeft && !options.templateOptions.addonRight) {\n\t        return template;\n\t      }\n\t      formlyBootstrapApiCheck.warn([api], [options]);\n\t      return addonTemplate.replace('<formly-transclude></formly-transclude>', template);\n\t    });\n\t  }\n\t  addAddonsManipulator.$inject = [\"formlyConfig\", \"formlyBootstrapApiCheck\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.run(addDescriptionManipulator);\n\t\n\t  function addDescriptionManipulator(formlyConfig) {\n\t    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n\t      if (angular.isDefined(options.templateOptions.description)) {\n\t        var el = document.createElement('div');\n\t        el.appendChild(angular.element(template)[0]);\n\t        el.appendChild(angular.element('<p id=\"' + scope.id + '_description\"' + 'class=\"help-block\"' + 'ng-if=\"to.description\">' + '{{to.description}}' + '</p>')[0]);\n\t        var modelEls = angular.element(el.querySelectorAll('[ng-model]'));\n\t        if (modelEls) {\n\t          modelEls.attr('aria-describedby', scope.id + '_description');\n\t        }\n\t        return el.innerHTML;\n\t      } else {\n\t        return template;\n\t      }\n\t    });\n\t  }\n\t  addDescriptionManipulator.$inject = [\"formlyConfig\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _addons = __webpack_require__(3);\n\t\n\tvar _addons2 = _interopRequireDefault(_addons);\n\t\n\tvar _description = __webpack_require__(4);\n\t\n\tvar _description2 = _interopRequireDefault(_description);\n\t\n\texports['default'] = function (ngModule) {\n\t  (0, _addons2['default'])(ngModule);\n\t  (0, _description2['default'])(ngModule);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: 'checkbox',\n\t      template: __webpack_require__(15),\n\t      wrapper: ['bootstrapHasError'],\n\t      apiCheck: function apiCheck(check) {\n\t        return {\n\t          templateOptions: {\n\t            label: check.string\n\t          }\n\t        };\n\t      }\n\t    });\n\t  }\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  __webpack_require__(6)(ngModule);\n\t  __webpack_require__(9)(ngModule);\n\t  __webpack_require__(8)(ngModule);\n\t  __webpack_require__(10)(ngModule);\n\t  __webpack_require__(11)(ngModule);\n\t  __webpack_require__(12)(ngModule);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addInputType);\n\t\n\t  function addInputType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: 'input',\n\t      template: '<input class=\"form-control\" ng-model=\"model[options.key]\">',\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError']\n\t    });\n\t  }\n\t  addInputType.$inject = [\"formlyConfigProvider\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: 'multiCheckbox',\n\t      template: __webpack_require__(16),\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      apiCheck: function apiCheck(check) {\n\t        return {\n\t          templateOptions: {\n\t            options: check.arrayOf(check.object),\n\t            labelProp: check.string.optional,\n\t            valueProp: check.string.optional\n\t          }\n\t        };\n\t      },\n\t      defaultOptions: {\n\t        noFormControl: false,\n\t        ngModelAttrs: {\n\t          required: {\n\t            attribute: '',\n\t            bound: ''\n\t          }\n\t        }\n\t      },\n\t      controller: /* @ngInject */[\"$scope\", function controller($scope) {\n\t        var to = $scope.to;\n\t        var opts = $scope.options;\n\t        $scope.multiCheckbox = {\n\t          checked: [],\n\t          change: setModel\n\t        };\n\t\n\t        // initialize the checkboxes check property\n\t        $scope.$watch('model', function modelWatcher(newModelValue) {\n\t          var modelValue, valueProp;\n\t\n\t          if (Object.keys(newModelValue).length) {\n\t            modelValue = newModelValue[opts.key];\n\t\n\t            $scope.$watch('to.options', function optionsWatcher(newOptionsValues) {\n\t              if (newOptionsValues && Array.isArray(newOptionsValues) && Array.isArray(modelValue)) {\n\t                valueProp = to.valueProp || 'value';\n\t                for (var index = 0; index < newOptionsValues.length; index++) {\n\t                  $scope.multiCheckbox.checked[index] = modelValue.indexOf(newOptionsValues[index][valueProp]) !== -1;\n\t                }\n\t              }\n\t            });\n\t          }\n\t        }, true);\n\t\n\t        function checkValidity(expressionValue) {\n\t          var valid;\n\t\n\t          if ($scope.to.required) {\n\t            valid = angular.isArray($scope.model[opts.key]) && $scope.model[opts.key].length > 0 && expressionValue;\n\t\n\t            $scope.fc.$setValidity('required', valid);\n\t          }\n\t        }\n\t\n\t        function setModel() {\n\t          $scope.model[opts.key] = [];\n\t          angular.forEach($scope.multiCheckbox.checked, function (checkbox, index) {\n\t            if (checkbox) {\n\t              $scope.model[opts.key].push(to.options[index][to.valueProp || 'value']);\n\t            }\n\t          });\n\t\n\t          // Must make sure we mark as touched because only the last checkbox due to a bug in angular.\n\t          $scope.fc.$setTouched();\n\t          checkValidity(true);\n\t\n\t          if ($scope.to.onChange) {\n\t            $scope.to.onChange();\n\t          }\n\t        }\n\t\n\t        if (opts.expressionProperties && opts.expressionProperties['templateOptions.required']) {\n\t          $scope.$watch(function () {\n\t            return $scope.to.required;\n\t          }, function (newValue) {\n\t            checkValidity(newValue);\n\t          });\n\t        }\n\t\n\t        if ($scope.to.required) {\n\t          var unwatchFormControl = $scope.$watch('fc', function (newValue) {\n\t            if (!newValue) {\n\t              return;\n\t            }\n\t            checkValidity(true);\n\t            unwatchFormControl();\n\t          });\n\t        }\n\t      }]\n\t    });\n\t  }\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addRadioType);\n\t\n\t  function addRadioType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: 'radio',\n\t      template: __webpack_require__(17),\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: {\n\t        noFormControl: false\n\t      },\n\t      apiCheck: function apiCheck(check) {\n\t        return {\n\t          templateOptions: {\n\t            options: check.arrayOf(check.object),\n\t            labelProp: check.string.optional,\n\t            valueProp: check.string.optional\n\t          }\n\t        };\n\t      }\n\t    });\n\t  }\n\t  addRadioType.$inject = [\"formlyConfigProvider\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addSelectType);\n\t\n\t  var template = '<select class=\"form-control\" ng-model=\"model[options.key]\"></select>';\n\t\n\t  function addSelectType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: 'select',\n\t      template: template,\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: function defaultOptions(options) {\n\t        /* jshint maxlen:195 */\n\t        var ngOptions = options.templateOptions.ngOptions || 'option[to.valueProp || \\'value\\'] as option[to.labelProp || \\'name\\'] group by option[to.groupProp || \\'group\\'] for option in to.options';\n\t        return {\n\t          ngModelAttrs: _defineProperty({}, ngOptions, {\n\t            value: options.templateOptions.optionsAttr || 'ng-options'\n\t          })\n\t        };\n\t      },\n\t      apiCheck: function apiCheck(check) {\n\t        return {\n\t          templateOptions: {\n\t            options: check.arrayOf(check.object),\n\t            optionsAttr: check.string.optional,\n\t            labelProp: check.string.optional,\n\t            valueProp: check.string.optional,\n\t            groupProp: check.string.optional\n\t          }\n\t        };\n\t      }\n\t    });\n\t  }\n\t  addSelectType.$inject = [\"formlyConfigProvider\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addTextareaType);\n\t\n\t  function addTextareaType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: 'textarea',\n\t      template: '<textarea class=\"form-control\" ng-model=\"model[options.key]\"></textarea>',\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: {\n\t        ngModelAttrs: {\n\t          rows: { attribute: 'rows' },\n\t          cols: { attribute: 'cols' }\n\t        }\n\t      },\n\t      apiCheck: function apiCheck(check) {\n\t        return {\n\t          templateOptions: {\n\t            rows: check.number.optional,\n\t            cols: check.number.optional\n\t          }\n\t        };\n\t      }\n\t    });\n\t  }\n\t  addTextareaType.$inject = [\"formlyConfigProvider\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addWrappers);\n\t\n\t  function addWrappers(formlyConfigProvider) {\n\t    formlyConfigProvider.setWrapper([{\n\t      name: 'bootstrapLabel',\n\t      template: __webpack_require__(19),\n\t      apiCheck: function apiCheck(check) {\n\t        return {\n\t          templateOptions: {\n\t            label: check.string.optional,\n\t            required: check.bool.optional,\n\t            labelSrOnly: check.bool.optional\n\t          }\n\t        };\n\t      }\n\t    }, { name: 'bootstrapHasError', template: __webpack_require__(18) }]);\n\t  }\n\t  addWrappers.$inject = [\"formlyConfigProvider\"];\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div ng-class=\\\"{'input-group': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"input-group-addon\\\"\\n         ng-if=\\\"to.addonLeft\\\"\\n         ng-style=\\\"{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}\\\"\\n         ng-click=\\\"to.addonLeft.onClick(options, this, $event)\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"input-group-addon\\\"\\n         ng-if=\\\"to.addonRight\\\"\\n         ng-style=\\\"{cursor: to.addonRight.onClick ? 'pointer' : 'inherit'}\\\"\\n         ng-click=\\\"to.addonRight.onClick(options, this, $event)\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\\n\"\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n             ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n    <label>\\n      <input type=\\\"radio\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             tabindex=\\\"0\\\"\\n             ng-value=\\\"option[to.valueProp || 'value']\\\"\\n             ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"form-group\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>\\n  <label for=\\\"{{id}}\\\" class=\\\"control-label {{to.labelSrOnly ? 'sr-only' : ''}}\\\" ng-if=\\\"to.label\\\">\\n    {{to.label}}\\n    {{to.required ? '*' : ''}}\\n  </label>\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** dist/angular-formly-templates-bootstrap.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 460866ee33f91f7b6705\n **/","module.exports = require('./index.common');\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","// some versions of angular don't export the angular module properly,\n// so we get it from window in this case.\nvar angular = require('angular');\nif (!angular.version) {\n  angular = window.angular;\n}\nmodule.exports = angular;\n\n\n\n/** WEBPACK FOOTER **\n ** ./angular-fix/index.js\n **/","const ngModuleName = 'formlyBootstrap';\nconst angular = require('./angular-fix');\nconst ngModule = angular.module(ngModuleName, [require('angular-formly')]);\nngModule.constant(\n  'formlyBootstrapApiCheck',\n  require('api-check')({\n    output: {\n      prefix: 'angular-formly-bootstrap'\n    }\n  })\n);\nngModule.constant('formlyBootstrapVersion', VERSION);\n\nrequire('./wrappers')(ngModule);\nrequire('./types')(ngModule);\nrequire('./run')(ngModule);\n\nexport default ngModuleName;\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.common.js\n **/","export default ngModule => {\n  ngModule.run(addAddonsManipulator);\n\n  function addAddonsManipulator(formlyConfig, formlyBootstrapApiCheck) {\n    var addonTemplate = require('./addons.html');\n    const addonChecker = formlyBootstrapApiCheck.shape({\n      class: formlyBootstrapApiCheck.string.optional,\n      text: formlyBootstrapApiCheck.string.optional,\n      onClick: formlyBootstrapApiCheck.func.optional\n    }).strict.optional;\n    const api = formlyBootstrapApiCheck.shape({\n      templateOptions: formlyBootstrapApiCheck.shape({\n        addonLeft: addonChecker,\n        addonRight: addonChecker\n      })\n    });\n    formlyConfig.templateManipulators.preWrapper.push(function(template, options) {\n      if (!options.templateOptions.addonLeft && !options.templateOptions.addonRight) {\n        return template;\n      }\n      formlyBootstrapApiCheck.warn([api], [options]);\n      return addonTemplate.replace('<formly-transclude></formly-transclude>', template);\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./run/addons.js\n **/","export default ngModule => {\n  ngModule.run(addDescriptionManipulator);\n\n  function addDescriptionManipulator(formlyConfig) {\n    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n      if (angular.isDefined(options.templateOptions.description)) {\n        var el = document.createElement('div');\n        el.appendChild(angular.element(template)[0]);\n        el.appendChild(angular.element(\n          '<p id=\"' + scope.id + '_description\"' +\n          'class=\"help-block\"' +\n          'ng-if=\"to.description\">' +\n          '{{to.description}}' +\n          '</p>'\n        )[0]);\n        var modelEls = angular.element(el.querySelectorAll('[ng-model]'));\n        if (modelEls) {\n          modelEls.attr('aria-describedby', scope.id + '_description');\n        }\n        return el.innerHTML;\n      } else {\n        return template;\n      }\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./run/description.js\n **/","import addons from './addons';\nimport description from './description';\n\nexport default ngModule => {\n  addons(ngModule);\n  description(ngModule);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./run/index.js\n **/","export default ngModule => {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'checkbox',\n      template: require('./checkbox.html'),\n      wrapper: ['bootstrapHasError'],\n      apiCheck: check => ({\n        templateOptions: {\n        \tlabel: check.string\n        }\n      })\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./types/checkbox.js\n **/","export default ngModule => {\n  require('./checkbox')(ngModule);\n  require('./multiCheckbox')(ngModule);\n  require('./input')(ngModule);\n  require('./radio')(ngModule);\n  require('./select')(ngModule);\n  require('./textarea')(ngModule);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./types/index.js\n **/","export default ngModule => {\n  ngModule.config(addInputType);\n\n  function addInputType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'input',\n      template: '<input class=\"form-control\" ng-model=\"model[options.key]\">',\n      wrapper: ['bootstrapLabel', 'bootstrapHasError']\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./types/input.js\n **/","export default ngModule => {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'multiCheckbox',\n      template: require('./multiCheckbox.html'),\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      apiCheck: check => ({\n        templateOptions: {\n          options: check.arrayOf(check.object),\n          labelProp: check.string.optional,\n          valueProp: check.string.optional\n        }\n      }),\n      defaultOptions: {\n        noFormControl: false,\n        ngModelAttrs: {\n          required: {\n            attribute: '',\n            bound: ''\n          }\n        }\n      },\n      controller: /* @ngInject */ function($scope) {\n        const to = $scope.to;\n        const opts = $scope.options;\n        $scope.multiCheckbox = {\n          checked: [],\n          change: setModel\n        };\n\n        // initialize the checkboxes check property\n        $scope.$watch('model', function modelWatcher(newModelValue) {\n          var modelValue, valueProp;\n\n          if (Object.keys(newModelValue).length) {\n            modelValue = newModelValue[opts.key];\n\n            $scope.$watch('to.options', function optionsWatcher(newOptionsValues) {\n              if (newOptionsValues && Array.isArray(newOptionsValues) && Array.isArray(modelValue)) {\n                valueProp = to.valueProp || 'value';\n                for (var index = 0; index < newOptionsValues.length; index++) {\n                  $scope.multiCheckbox.checked[index] = modelValue.indexOf(newOptionsValues[index][valueProp]) !== -1;\n                }\n              }\n            });\n          }\n        }, true);\n\n        function checkValidity(expressionValue) {\n          var valid;\n\n          if ($scope.to.required) {\n            valid = angular.isArray($scope.model[opts.key]) &&\n              $scope.model[opts.key].length > 0 &&\n              expressionValue;\n\n            $scope.fc.$setValidity('required', valid);\n          }\n        }\n\n        function setModel() {\n          $scope.model[opts.key] = [];\n          angular.forEach($scope.multiCheckbox.checked, (checkbox, index) => {\n            if (checkbox) {\n              $scope.model[opts.key].push(to.options[index][to.valueProp || 'value']);\n            }\n          });\n\n          // Must make sure we mark as touched because only the last checkbox due to a bug in angular.\n          $scope.fc.$setTouched();\n          checkValidity(true);\n          \n          if ($scope.to.onChange) {\n            $scope.to.onChange();\n          }\n        }\n\n        if (opts.expressionProperties && opts.expressionProperties['templateOptions.required']) {\n          $scope.$watch(function() {\n            return $scope.to.required;\n          }, function(newValue) {\n            checkValidity(newValue);\n          });\n        }\n\n        if ($scope.to.required) {\n          var unwatchFormControl = $scope.$watch('fc', function(newValue) {\n            if (!newValue) {\n              return;\n            }\n            checkValidity(true);\n            unwatchFormControl();\n          });\n        }\n      }\n    });\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./types/multiCheckbox.js\n **/","export default ngModule => {\n  ngModule.config(addRadioType);\n\n  function addRadioType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'radio',\n      template: require('./radio.html'),\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions: {\n        noFormControl: false\n      },\n      apiCheck: check => ({\n        templateOptions: {\n          options: check.arrayOf(check.object),\n          labelProp: check.string.optional,\n          valueProp: check.string.optional\n        }\n      })\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./types/radio.js\n **/","export default  ngModule => {\n  ngModule.config(addSelectType);\n\n  const template = `<select class=\"form-control\" ng-model=\"model[options.key]\"></select>`;\n\n  function addSelectType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'select',\n      template,\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions(options) {\n        /* jshint maxlen:195 */\n        let ngOptions = options.templateOptions.ngOptions || `option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options`;\n        return {\n          ngModelAttrs: {\n            [ngOptions]: {\n              value: options.templateOptions.optionsAttr || 'ng-options'\n            }\n          }\n        };\n      },\n      apiCheck: check => ({\n        templateOptions: {\n          options: check.arrayOf(check.object),\n          optionsAttr: check.string.optional,\n          labelProp: check.string.optional,\n          valueProp: check.string.optional,\n          groupProp: check.string.optional\n        }\n      })\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./types/select.js\n **/","export default  ngModule => {\n  ngModule.config(addTextareaType);\n\n  function addTextareaType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'textarea',\n      template: '<textarea class=\"form-control\" ng-model=\"model[options.key]\"></textarea>',\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions: {\n        ngModelAttrs: {\n          rows: {attribute: 'rows'},\n          cols: {attribute: 'cols'}\n        }\n      },\n      apiCheck: check => ({\n        templateOptions: {\n          rows: check.number.optional,\n          cols: check.number.optional\n        }\n      })\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./types/textarea.js\n **/","export default ngModule => {\n  ngModule.config(addWrappers);\n\n  function addWrappers(formlyConfigProvider) {\n    formlyConfigProvider.setWrapper([\n      {\n        name: 'bootstrapLabel',\n        template: require('./label.html'),\n        apiCheck: check => ({\n          templateOptions: {\n            label: check.string.optional,\n            required: check.bool.optional,\n            labelSrOnly: check.bool.optional,\n          }\n        })\n      },\n      {name: 'bootstrapHasError', template: require('./has-error.html')}\n    ]);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./wrappers/index.js\n **/","module.exports = \"<div ng-class=\\\"{'input-group': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"input-group-addon\\\"\\n         ng-if=\\\"to.addonLeft\\\"\\n         ng-style=\\\"{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}\\\"\\n         ng-click=\\\"to.addonLeft.onClick(options, this, $event)\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"input-group-addon\\\"\\n         ng-if=\\\"to.addonRight\\\"\\n         ng-style=\\\"{cursor: to.addonRight.onClick ? 'pointer' : 'inherit'}\\\"\\n         ng-click=\\\"to.addonRight.onClick(options, this, $event)\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./run/addons.html\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/checkbox.html\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n             ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/multiCheckbox.html\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n    <label>\\n      <input type=\\\"radio\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             tabindex=\\\"0\\\"\\n             ng-value=\\\"option[to.valueProp || 'value']\\\"\\n             ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/radio.html\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"form-group\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/has-error.html\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = \"<div>\\n  <label for=\\\"{{id}}\\\" class=\\\"control-label {{to.labelSrOnly ? 'sr-only' : ''}}\\\" ng-if=\\\"to.label\\\">\\n    {{to.label}}\\n    {{to.required ? '*' : ''}}\\n  </label>\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/label.html\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"apiCheck\",\"amd\":\"api-check\",\"commonjs2\":\"api-check\",\"commonjs\":\"api-check\"}\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}\n ** module id = 22\n ** module chunks = 0\n **/"],"sourceRoot":""}